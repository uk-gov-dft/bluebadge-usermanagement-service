<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="uk.gov.dft.bluebadge.service.usermanagement.repository.mapper.UserManagementMapper">
    <select id="retrieveUserById" resultType="UserEntity">
        SELECT u.id, u.name
            , u.local_authority_id AS localAuthorityId
            , u.email_address AS emailAddress
            , u.role_id AS roleId
            , r.description AS roleName
        FROM users u
        INNER JOIN roles r ON u.role_id = r.id
        WHERE u.id = #{id}
    </select>

    <select id="retrieveUserByEmailAddress" resultType="UserEntity">
        SELECT u.id, u.name
            , u.local_authority_id AS localAuthorityId
            , u.email_address AS emailAddress
            , u.role_id AS roleId
            , r.description AS roleName
        FROM users u
        INNER JOIN roles r ON u.role_id = r.id
        WHERE UPPER(email_address) = UPPER(#{emailAddress})
    </select>

    <select id="retrieveUsersByAuthorityId" resultType="UserEntity" parameterType="UserEntity">
        SELECT u.id, u.name
            , u.local_authority_id AS localAuthorityId
            , u.email_address AS emailAddress
            , u.role_id AS roleId
            , r.description AS roleName
        FROM users u
        INNER JOIN roles r ON u.role_id = r.id
        WHERE u.local_authority_id = #{localAuthorityId}
        <if test="name != null">
          AND (UPPER(u.name) LIKE UPPER(#{name}) OR UPPER(u.email_address)
            LIKE UPPER(#{emailAddress}))
        </if>
    </select>

    <select id="emailAddressAlreadyUsed" resultType="boolean" parameterType="UserEntity">
        SELECT EXISTS(
          SELECT 1 FROM users
          WHERE UPPER(email_address) = UPPER(#{emailAddress})
          <if test="id != null">
              AND id != #{id}
          </if>
        )
    </select>

    <update id="updateUser" parameterType="UserEntity">
        UPDATE users
        SET
            name = #{name}
            , email_address = #{emailAddress}
        WHERE id = #{id}
    </update>

    <insert id="createUser" parameterType="UserEntity"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO users (name, local_authority_id, email_address, role_id)
        VALUES (#{name}, #{localAuthorityId}, #{emailAddress}, #{roleId})
    </insert>

    <delete id="deleteUser" parameterType="Integer">
        DELETE FROM users
        WHERE id = #{id}
    </delete>

</mapper>